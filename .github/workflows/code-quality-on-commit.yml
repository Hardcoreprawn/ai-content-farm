name: Quality Checks on Commit

on:
  push:
    branches: ["*"]  # Run on all branches
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      python-changed: ${{ steps.changes.outputs.python }}
      workflow-changed: ${{ steps.changes.outputs.workflow }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: changes
        run: |
          # Check for Python changes
          if git diff --name-only "${{ github.event.before }}..${{ github.sha }}" | grep -E '\.(py)$|requirements.*\.txt$|pyproject\.toml$|\.flake8$|scripts/code-quality\.sh$'; then
            echo "python=true" >> "$GITHUB_OUTPUT"
            echo "[INFO] Python files changed - will run Python quality checks"
          else
            echo "python=false" >> "$GITHUB_OUTPUT"
            echo "[INFO] No Python files changed - skipping Python quality checks"
          fi

          # Check for workflow changes
          if git diff --name-only "${{ github.event.before }}..${{ github.sha }}" | grep -E '\.github/(workflows|actions)/.*\.(yml|yaml)$'; then
            echo "workflow=true" >> "$GITHUB_OUTPUT"
            echo "[INFO] Workflow files changed - will run workflow quality checks"
          else
            echo "workflow=false" >> "$GITHUB_OUTPUT"
            echo "[INFO] No workflow files changed - skipping workflow quality checks"
          fi

  python-quality:
    name: Python Code Quality
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.python-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Make code quality script executable
        run: chmod +x scripts/code-quality.sh

      - name: Run Python quality checks
        id: python-checks
        run: |
          echo "[SCAN] Running Python code quality checks..."
          if ./scripts/code-quality.sh; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "[PASS] Python quality checks passed!"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "[FAIL] Python quality checks failed!"
            exit 1
          fi

  workflow-quality:
    name: Workflow Quality
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.workflow-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run workflow quality checks
        id: workflow-checks
        uses: ./.github/actions/lint-workflows
        with:
          fail-on-error: 'true'

  quality-summary:
    name: Quality Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, python-quality, workflow-quality]
    if: always()

    steps:
      - name: Quality Check Summary
        run: |
          echo "## Quality Check Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"

          # Python quality results
          if [ "${{ needs.detect-changes.outputs.python-changed }}" = "true" ]; then
            if [ "${{ needs.python-quality.result }}" = "success" ]; then
              echo "[PASS] **Python Code Quality**: PASSED" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "[FAIL] **Python Code Quality**: FAILED" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "[SKIP] **Python Code Quality**: SKIPPED (no changes)" >> "$GITHUB_STEP_SUMMARY"
          fi

          # Workflow quality results
          if [ "${{ needs.detect-changes.outputs.workflow-changed }}" = "true" ]; then
            if [ "${{ needs.workflow-quality.result }}" = "success" ]; then
              echo "[PASS] **Workflow Quality**: PASSED" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "[FAIL] **Workflow Quality**: FAILED" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "[SKIP] **Workflow Quality**: SKIPPED (no changes)" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Comment on PR (if any checks failed)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            let message = '[FAIL] **Quality checks failed!**\n\n';

            if ('${{ needs.detect-changes.outputs.python-changed }}' === 'true' && '${{ needs.python-quality.result }}' !== 'success') {
              message += '**Python Code Quality Issues:**\n';
              message += '- Run `make lint-python` locally to see the issues\n';
              message += '- Run `make format-python` to auto-fix formatting problems\n\n';
            }

            if ('${{ needs.detect-changes.outputs.workflow-changed }}' === 'true' && '${{ needs.workflow-quality.result }}' !== 'success') {
              message += '**Workflow Quality Issues:**\n';
              message += '- Run `make lint-workflows` locally to check YAML issues\n';
              message += '- Check workflow syntax and action references\n\n';
            }

            message += 'Please fix the issues and push again.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Comment on PR (if all checks passed)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            let message = '[PASS] **All quality checks passed!**\n\n';

            if ('${{ needs.detect-changes.outputs.python-changed }}' === 'true') {
              message += '[PASS] Python code meets quality standards\n';
            }

            if ('${{ needs.detect-changes.outputs.workflow-changed }}' === 'true') {
              message += '[PASS] Workflow files are properly formatted\n';
            }

            message += '\nYour code is ready for merge!';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

name: 'Auto-fix Code Formatting'
description: 'Automatically fixes code formatting using Black and isort, then commits changes'
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  commit-message:
    description: 'Commit message for auto-fix changes'
    required: false
    default: 'Auto-fix code formatting [skip ci]'

outputs:
  changes-made:
    description: 'Whether any formatting changes were made'
    value: ${{ steps.fix.outputs.changes-made }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'

    - name: Install Formatting Tools
      shell: bash
      run: |
        echo "Installing formatting tools..."
        pip install black isort

    - name: Check Current Formatting
      shell: bash
      id: check
      run: |
        echo "Checking current formatting status..."

        # Check if formatting changes are needed
        if black --check --diff . && isort --check-only --diff .; then
          echo "No formatting changes needed"
          echo "needs-formatting=false" >> $GITHUB_OUTPUT
        else
          echo "Formatting changes needed"
          echo "needs-formatting=true" >> $GITHUB_OUTPUT
        fi

    - name: Auto-fix Formatting
      shell: bash
      id: fix
      if: steps.check.outputs.needs-formatting == 'true'
      run: |
        echo "Auto-fixing code formatting..."

        # Run Black formatting
        echo "Running Black formatter..."
        black . --line-length 88

        # Run isort for import sorting
        echo "Running isort for import sorting..."
        isort . --profile black

        # Check if there are any changes
        if git diff --quiet; then
          echo "No changes were made"
          echo "changes-made=false" >> $GITHUB_OUTPUT
        else
          echo "Formatting changes were made"
          echo "changes-made=true" >> $GITHUB_OUTPUT

          # Show the changes
          echo "Changes made:"
          git diff --name-only
        fi

    - name: Commit Formatting Changes
      shell: bash
      if: steps.fix.outputs.changes-made == 'true'
      run: |
        echo "Committing formatting changes..."

        # Configure git
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        # Add and commit changes
        git add .
        git commit -m "${{ inputs.commit-message }}"

        # Push changes
        git push

    - name: Set Output for No Changes
      shell: bash
      if: steps.check.outputs.needs-formatting == 'false'
      run: |
        echo "changes-made=false" >> $GITHUB_OUTPUT

name: 'Code Quality Checks'
description: 'Runs comprehensive code quality checks including formatting, linting, and type checking'
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  check-formatting:
    description: 'Run Black formatting checks'
    required: false
    default: 'true'
  check-imports:
    description: 'Run isort import sorting checks'
    required: false
    default: 'true'
  check-linting:
    description: 'Run flake8 linting checks'
    required: false
    default: 'true'
  check-types:
    description: 'Run mypy type checking'
    required: false
    default: 'false'
  check-complexity:
    description: 'Run pylint complexity analysis'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'

    - name: Install Code Quality Tools
      shell: bash
      run: |
        echo "Installing code quality tools..."
        pip install flake8 black isort mypy pylint

    - name: Run Code Quality Checks
      shell: bash
      run: |
        echo "Running code quality checks using shared script..."
        chmod +x ./scripts/code-quality.sh

        # Build the command based on inputs
        SCRIPT_ARGS=""

        if [[ "${{ inputs.check-formatting }}" == "true" && "${{ inputs.check-imports }}" == "true" && "${{ inputs.check-linting }}" == "true" ]]; then
          # Default case - run standard checks
          SCRIPT_ARGS=""
        else
          # Individual checks
          if [[ "${{ inputs.check-formatting }}" == "true" ]]; then
            SCRIPT_ARGS="$SCRIPT_ARGS --formatting"
          fi
          if [[ "${{ inputs.check-imports }}" == "true" ]]; then
            SCRIPT_ARGS="$SCRIPT_ARGS --imports"
          fi
          if [[ "${{ inputs.check-linting }}" == "true" ]]; then
            SCRIPT_ARGS="$SCRIPT_ARGS --linting"
          fi
        fi

        if [[ "${{ inputs.check-types }}" == "true" ]]; then
          SCRIPT_ARGS="$SCRIPT_ARGS --types"
        fi

        if [[ "${{ inputs.check-complexity }}" == "true" ]]; then
          SCRIPT_ARGS="$SCRIPT_ARGS --complexity"
        fi

        # If all checks are enabled, use --all flag
        if [[ "${{ inputs.check-formatting }}" == "true" && "${{ inputs.check-imports }}" == "true" && "${{ inputs.check-linting }}" == "true" && "${{ inputs.check-types }}" == "true" && "${{ inputs.check-complexity }}" == "true" ]]; then
          SCRIPT_ARGS="--all"
        fi

        # Run the script
        ./scripts/code-quality.sh $SCRIPT_ARGS

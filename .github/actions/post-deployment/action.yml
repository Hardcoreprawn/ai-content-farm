name: 'Post-Deployment Validation'
description: 'Validates deployment health and performs post-deployment checks'
inputs:
  deployment-url:
    description: 'The URL of the deployed application'
    required: true
  max-attempts:
    description: 'Maximum number of health check attempts'
    required: false
    default: '5'
  retry-delay:
    description: 'Delay between retry attempts in seconds'
    required: false
    default: '10'
  timeout:
    description: 'Timeout for each health check attempt in seconds'
    required: false
    default: '30'

runs:
  using: 'composite'
  steps:
    - name: Health Check
      shell: bash
      run: |
        deployment_url="${{ inputs.deployment-url }}"
        max_attempts="${{ inputs.max-attempts }}"
        retry_delay="${{ inputs.retry-delay }}"
        timeout="${{ inputs.timeout }}"

        if [ -z "$deployment_url" ]; then
          echo "No deployment URL provided, skipping health check"
          exit 0
        fi

        echo "Starting health check for: $deployment_url"
        echo "Max attempts: $max_attempts"
        echo "Retry delay: $retry_delay seconds"
        echo "Timeout per attempt: $timeout seconds"

        for attempt in $(seq 1 $max_attempts); do
          echo "Health check attempt $attempt of $max_attempts..."

          if curl -f --max-time "$timeout" "$deployment_url/health"; then
            echo "Health check passed on attempt $attempt"
            exit 0
          fi

          if [ $attempt -lt $max_attempts ]; then
            echo "Attempt $attempt failed, waiting $retry_delay seconds before retry..."
            sleep "$retry_delay"
          fi
        done

        echo "Health check failed after $max_attempts attempts"
        exit 1

    - name: Additional Validation
      shell: bash
      run: |
        deployment_url="${{ inputs.deployment-url }}"

        if [ -z "$deployment_url" ]; then
          echo "No deployment URL provided, skipping additional validation"
          exit 0
        fi

        echo "Running additional post-deployment validation..."

        # Check if the application returns a valid response
        echo "Checking application response..."
        if curl -s --max-time 30 "$deployment_url" | grep -q "html\|json\|xml"; then
          echo "Application is responding with valid content"
        else
          echo "Warning: Application response does not contain expected content"
        fi

        # Check basic connectivity
        echo "Checking basic connectivity..."
        if curl -s --max-time 10 --head "$deployment_url" > /dev/null; then
          echo "Basic connectivity test passed"
        else
          echo "Warning: Basic connectivity test failed"
        fi

        echo "Post-deployment validation completed"

{"version":"1.128.1","results":[{"check_id":"yaml.github-actions.security.run-shell-injection.run-shell-injection","path":"/src/.github/workflows/production-deployment.yml","start":{"line":140,"col":7,"offset":5687},"end":{"line":152,"col":2,"offset":6234},"extra":{"message":"Using variable interpolation `${{...}}` with `github` context data in a `run:` step could allow an attacker to inject their own code into the runner. This would allow them to steal secrets and code. `github` context data can have arbitrary user input and should be treated as untrusted. Instead, use an intermediate environment variable with `env:` to store the data and use the environment variable in the `run:` script. Be sure to use double-quotes the environment variable, like this: \"$ENVVAR\".","metadata":{"category":"security","cwe":["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://docs.github.com/en/actions/learn-github-actions/security-hardening-for-github-actions#understanding-the-risk-of-script-injections","https://securitylab.github.com/research/github-actions-untrusted-input/"],"technology":["github-actions"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"HIGH","confidence":"HIGH","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Command Injection"],"source":"https://semgrep.dev/r/yaml.github-actions.security.run-shell-injection.run-shell-injection","shortlink":"https://sg.run/pkzk"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.azure.security.keyvault.keyvault-specify-network-acl.keyvault-specify-network-acl","path":"/src/infra/main.tf","start":{"line":21,"col":1,"offset":382},"end":{"line":21,"col":9,"offset":390},"extra":{"message":"Network ACLs allow you to reduce your exposure to risk by limiting what can access your key vault. The default action of the Network ACL should be set to deny for when IPs are not matched. Azure services can be allowed to bypass.","metadata":{"cwe":["CWE-1220: Insufficient Granularity of Access Control"],"category":"security","technology":["terraform","azure"],"references":["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls","https://docs.microsoft.com/en-us/azure/key-vault/general/network-security"],"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/terraform.azure.security.keyvault.keyvault-specify-network-acl.keyvault-specify-network-acl","shortlink":"https://sg.run/nKgX"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.azure.security.storage.storage-allow-microsoft-service-bypass.storage-allow-microsoft-service-bypass","path":"/src/infra/main.tf","start":{"line":165,"col":1,"offset":5371},"end":{"line":188,"col":2,"offset":6615},"extra":{"message":"Some Microsoft services that interact with storage accounts operate from networks that can't be granted access through network rules. To help this type of service work as intended, allow the set of trusted Microsoft services to bypass the network rules","metadata":{"cwe":["CWE-1220: Insufficient Granularity of Access Control"],"category":"security","technology":["terraform","azure"],"references":["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass","https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass","https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security#trusted-microsoft-services"],"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/terraform.azure.security.storage.storage-allow-microsoft-service-bypass.storage-allow-microsoft-service-bypass","shortlink":"https://sg.run/WpX4"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.azure.security.storage.storage-queue-services-logging.storage-queue-services-logging","path":"/src/infra/main.tf","start":{"line":165,"col":1,"offset":5371},"end":{"line":188,"col":2,"offset":6615},"extra":{"message":"Storage Analytics logs detailed information about successful and failed requests to a storage service. This information can be used to monitor individual requests and to diagnose issues with a storage service. Requests are logged on a best-effort basis.","metadata":{"cwe":["CWE-778: Insufficient Logging"],"category":"security","technology":["terraform","azure"],"references":["https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging","https://docs.microsoft.com/en-us/azure/storage/common/storage-analytics-logging?tabs=dotnet"],"owasp":["A10:2017 - Insufficient Logging & Monitoring","A09:2021 - Security Logging and Monitoring Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Insufficient Logging"],"source":"https://semgrep.dev/r/terraform.azure.security.storage.storage-queue-services-logging.storage-queue-services-logging","shortlink":"https://sg.run/0yEv"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/staging-deployment.yml","start":{"line":155,"col":63,"offset":5509},"end":{"line":155,"col":113,"offset":5559}},{"path":"/src/.github/workflows/staging-deployment.yml","start":{"line":161,"col":21,"offset":5509},"end":{"line":161,"col":48,"offset":5536}},{"path":"/src/.github/workflows/staging-deployment.yml","start":{"line":165,"col":19,"offset":5509},"end":{"line":165,"col":46,"offset":5536}}]],"message":"Syntax error at line /src/.github/workflows/staging-deployment.yml:155:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.security-validation.outputs.key-vault-name` was unexpected","path":"/src/.github/workflows/staging-deployment.yml","spans":[{"file":"/src/.github/workflows/staging-deployment.yml","start":{"line":155,"col":63,"offset":5509},"end":{"line":155,"col":113,"offset":5559}},{"file":"/src/.github/workflows/staging-deployment.yml","start":{"line":161,"col":21,"offset":5509},"end":{"line":161,"col":48,"offset":5536}},{"file":"/src/.github/workflows/staging-deployment.yml","start":{"line":165,"col":19,"offset":5509},"end":{"line":165,"col":46,"offset":5536}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/staging-deployment.yml","start":{"line":227,"col":6,"offset":8172},"end":{"line":240,"col":4,"offset":8634}}]],"message":"Syntax error at line /src/.github/workflows/staging-deployment.yml:227:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`hk Testing staging deployment...\"\n\n# Test HTTP Summary Womble function\nSTAGING_RESPONSE=$(curl -s -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"source\": \"test\", \"topics\": [\"technology\"], \"limit\": 2}' \\\n  \"https://ai-content-staging-func.azurewebsites.net/api/SummaryWomble\" || echo \"FAILED\")\n\nif [[ \"$STAGING_RESPONSE\" == *\"FAILED\"* ]]; then\n  echo \"D^M Staging deployment test failed\"\n  exit 1\nelse\n  echo \"D]F Staging deployment test passed\"\nfi\n` was unexpected","path":"/src/.github/workflows/staging-deployment.yml","spans":[{"file":"/src/.github/workflows/staging-deployment.yml","start":{"line":227,"col":6,"offset":8172},"end":{"line":240,"col":4,"offset":8634}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/staging-deployment.yml","start":{"line":285,"col":13,"offset":10270},"end":{"line":295,"col":4,"offset":10822}}]],"message":"Syntax error at line /src/.github/workflows/staging-deployment.yml:285:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [[ \"${{ needs.security-validation.result }}\" == \"success\" && \n      \"${{ needs.staging-deploy.result }}\" == \"success\" && \n      \"${{ needs.integration-tests.result }}\" == \"success\" ]]; then\n  echo \"D]F Staging deployment completed successfully\"\n  echo \"R`UX Staging URL: https://ai-content-staging-func.azurewebsites.net\"\nelse\n  echo \"D^M Staging deployment failed or was blocked\"\n  echo \"Security: ${{ needs.security-validation.result }}\"\n  echo \"Deploy: ${{ needs.staging-deploy.result }}\"\n  echo \"Tests: ${{ needs.integration-tests.result }}\"\nfi\n` was unexpected","path":"/src/.github/workflows/staging-deployment.yml","spans":[{"file":"/src/.github/workflows/staging-deployment.yml","start":{"line":285,"col":13,"offset":10270},"end":{"line":295,"col":4,"offset":10822}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /src/python-safety-results.json:1:\n missing element","path":"/src/python-safety-results.json"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /src/.github/workflows/security-parallel.yml:1:\n (approximate error location; error nearby after) error calling parser: mapping values are not allowed in this context character 0 position 0 returned: 0","path":"/src/.github/workflows/security-parallel.yml"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":68,"col":18,"offset":2273},"end":{"line":80,"col":58,"offset":3063}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:68:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`US Running comprehensive security validation for production...\"\n\n# Checkov - strict mode for production\ndocker run --rm -v $PWD:/workspace bridgecrew/checkov -d /workspace/infra --hard-fail-on HIGH,CRITICAL --quiet --compact --output json --output-file-path /workspace/infra/checkov-results.json\ndocker run --rm -v $PWD:/workspace bridgecrew/checkov -d /workspace/azure-function-deploy --hard-fail-on HIGH,CRITICAL --quiet --compact\n\n# Trivy - fail on high severity\ndocker run --rm -v $PWD:/workspace aquasec/trivy config /workspace/infra --format json --output /workspace/infra/trivy-results.json --severity HIGH,CRITICAL --exit-code 1\n\n# Terrascan\ncd infra && terrascan scan -i terraform --output json > terrascan-results.json\n\necho \"D]F All security scans passed production criteria\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":68,"col":18,"offset":2273},"end":{"line":80,"col":58,"offset":3063}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":109,"col":63,"offset":4050},"end":{"line":109,"col":96,"offset":4083}},{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":112,"col":33,"offset":4050},"end":{"line":112,"col":60,"offset":4077}},{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":119,"col":31,"offset":4050},"end":{"line":119,"col":58,"offset":4077}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:109:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.get-keyvault.outputs.name` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":109,"col":63,"offset":4050},"end":{"line":109,"col":96,"offset":4083}},{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":112,"col":33,"offset":4050},"end":{"line":112,"col":60,"offset":4077}},{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":119,"col":31,"offset":4050},"end":{"line":119,"col":58,"offset":4077}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":140,"col":31,"offset":5693},"end":{"line":140,"col":69,"offset":5731}},{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":143,"col":41,"offset":5693},"end":{"line":143,"col":68,"offset":5720}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:140:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ steps.security-scoring.outputs.score` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":140,"col":31,"offset":5693},"end":{"line":140,"col":69,"offset":5731}},{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":143,"col":41,"offset":5693},"end":{"line":143,"col":68,"offset":5720}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":177,"col":30,"offset":6972},"end":{"line":177,"col":86,"offset":7028}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:177:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ needs.pre-production-validation.outputs.security-score` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":177,"col":30,"offset":6972},"end":{"line":177,"col":86,"offset":7028}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":202,"col":18,"offset":7766},"end":{"line":208,"col":76,"offset":8008}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:202:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`S  Creating production state backup...\"\ncd infra\nterraform init\nterraform workspace select production || terraform workspace new production\n\n# Export current state\nterraform show -json > production-state-backup-$(date +%Y%m%d-%H%M%S).json\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":202,"col":18,"offset":7766},"end":{"line":208,"col":76,"offset":8008}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":212,"col":18,"offset":8131},"end":{"line":220,"col":35,"offset":8392}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:212:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`[A Deploying infrastructure to production...\"\ncd infra\nterraform workspace select production\n\n# Plan with production variables\nterraform plan -var-file=\"production.tfvars\" -out=production.tfplan\n\n# Apply the planned changes\nterraform apply production.tfplan\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":212,"col":18,"offset":8131},"end":{"line":220,"col":35,"offset":8392}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":224,"col":18,"offset":8526},"end":{"line":231,"col":57,"offset":8795}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:224:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`Tg Deploying Azure Functions to production...\"\ncd azure-function-deploy\n\n# Install Azure Functions Core Tools\nnpm install -g azure-functions-core-tools@4 --unsafe-perm true\n\n# Deploy to production function app\nfunc azure functionapp publish hot-topics-func --python\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":224,"col":18,"offset":8526},"end":{"line":231,"col":57,"offset":8795}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":235,"col":18,"offset":8913},"end":{"line":253,"col":42,"offset":9454}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:235:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`hk Running production smoke tests...\"\n\n# Wait for deployment to settle\nsleep 30\n\n# Test 1: HTTP function health\necho \"Testing HTTP Summary Womble function...\"\nPROD_RESPONSE=$(curl -s -w \"%{http_code}\" -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"source\": \"test\", \"limit\": 1}' \\\n  \"https://hot-topics-func.azurewebsites.net/api/SummaryWomble\")\n\nHTTP_CODE=\"${PROD_RESPONSE: -3}\"\nif [ \"$HTTP_CODE\" != \"200\" ]; then\n  echo \"D^M Production smoke test failed: HTTP $HTTP_CODE\"\n  exit 1\nfi\n\necho \"D]F Production smoke tests passed\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":235,"col":18,"offset":8913},"end":{"line":253,"col":42,"offset":9454}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":262,"col":6,"offset":9670},"end":{"line":262,"col":56,"offset":9720}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:262:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`PxQyP Created deployment tag: $DEPLOYMENT_TAG\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":262,"col":6,"offset":9670},"end":{"line":262,"col":56,"offset":9720}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":273,"col":18,"offset":10214},"end":{"line":282,"col":47,"offset":10629}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:273:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`UN Running comprehensive production validation...\"\n\n# Test all endpoints\necho \"Testing Summary Womble with real data...\"\ncurl -s -f \"https://hot-topics-func.azurewebsites.net/api/SummaryWomble\" \\\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"source\": \"reddit\", \"topics\": [\"technology\"], \"limit\": 3, \"credentials\": {\"source\": \"keyvault\"}}' > /dev/null\n\necho \"D]F All production endpoints validated\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":273,"col":18,"offset":10214},"end":{"line":282,"col":47,"offset":10629}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":286,"col":18,"offset":10761},"end":{"line":289,"col":31,"offset":11007}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:286:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`T[ Production deployment completed successfully\"\necho \"R`UX Production URL: https://hot-topics-func.azurewebsites.net\"\necho \"R`TK Security Score: ${{ needs.pre-production-validation.outputs.security-score }}/100\"\necho \"R`TF Deployed: $(date)\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":286,"col":18,"offset":10761},"end":{"line":289,"col":31,"offset":11007}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":300,"col":18,"offset":11250},"end":{"line":304,"col":55,"offset":11512}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:300:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `\"R`[i Rollback preparation:\"\necho \"1. Previous state backup created during deployment\"\necho \"2. Deployment tag created for quick identification\"\necho \"3. To rollback: revert to previous git tag and redeploy\"\necho \"4. Emergency contact: Check SECURITY_POLICY.md\"\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":300,"col":18,"offset":11250},"end":{"line":304,"col":55,"offset":11512}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/src/.github/workflows/production-deployment.yml","start":{"line":315,"col":13,"offset":11819},"end":{"line":326,"col":4,"offset":12409}}]],"message":"Syntax error at line /src/.github/workflows/production-deployment.yml:315:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `if [[ \"${{ needs.production-deploy.result }}\" == \"success\" && \n      \"${{ needs.post-deployment-validation.result }}\" == \"success\" ]]; then\n  echo \"R`OJ PRODUCTION DEPLOYMENT SUCCESSFUL\"\n  echo \"R`UX Production URL: https://hot-topics-func.azurewebsites.net\"\n  echo \"R`US Security Score: ${{ needs.pre-production-validation.outputs.security-score }}/100\"\n  echo \"R`TF Deployed: $(date)\"\n  echo \"R`PxQyP Git Tag: production-$(date +%Y%m%d-%H%M%S)\"\nelse\n  echo \"D^M PRODUCTION DEPLOYMENT FAILED\"\n  echo \"R`UN Check logs for details\"\n  echo \"R`[i Production environment may need attention\"\nfi\n` was unexpected","path":"/src/.github/workflows/production-deployment.yml","spans":[{"file":"/src/.github/workflows/production-deployment.yml","start":{"line":315,"col":13,"offset":11819},"end":{"line":326,"col":4,"offset":12409}}]}],"paths":{"scanned":["/src/.devcontainer/Dockerfile","/src/.devcontainer/devcontainer.json","/src/.github/agent-instructions.md","/src/.github/workflows/build-and-deploy.yml","/src/.github/workflows/checkov.yml","/src/.github/workflows/production-deployment.yml","/src/.github/workflows/security-and-cost-validation.yml","/src/.github/workflows/security-parallel.yml","/src/.github/workflows/staging-deployment.yml","/src/.gitignore","/src/.markdownlint.json","/src/Makefile","/src/PROJECT_STATUS.md","/src/README.md","/src/containers/content-collector/collector.py","/src/containers/content-collector/config.py","/src/containers/content-collector/main.py","/src/containers/content-collector/pyproject.toml","/src/containers/content-collector/requirements.txt","/src/containers/content-enricher/__init__.py","/src/containers/content-enricher/config.py","/src/containers/content-enricher/enricher.py","/src/containers/content-enricher/main.py","/src/containers/content-enricher/mypy.ini","/src/containers/content-enricher/pyproject.toml","/src/containers/content-enricher/requirements.txt","/src/containers/content-processor/Dockerfile","/src/containers/content-processor/README.md","/src/containers/content-processor/config.py","/src/containers/content-processor/main.py","/src/containers/content-processor/processor.py","/src/containers/content-processor/pyproject.toml","/src/containers/content-processor/requirements.txt","/src/docs/CURRENT_STATUS.md","/src/docs/KEYVAULT_INTEGRATION.md","/src/docs/README.md","/src/docs/agent-instructions.md","/src/docs/articles/2025-07-24-sample-topic.md","/src/docs/content-collector-api.md","/src/docs/content-processing-workflow.md","/src/docs/cost-analysis.md","/src/docs/deployment-guide.md","/src/docs/development-workflow.md","/src/docs/file-inventory.md","/src/docs/index.md","/src/docs/key-vault-integration.md","/src/docs/progress-tracking.md","/src/docs/project-log.md","/src/docs/security-policy.md","/src/docs/security-testing-report.md","/src/docs/system-design.md","/src/docs/testing-guide.md","/src/infra/.infracost/pricing.gob","/src/infra/.infracost/terraform_modules/manifest.json","/src/infra/README.md","/src/infra/main.tf","/src/infra/outputs.tf","/src/infra/production.tfvars","/src/infra/providers.tf","/src/infra/sbom-infrastructure.txt","/src/infra/staging.tfvars","/src/infra/terraform.tfstate.d/staging/terraform.tfstate","/src/infra/terraform.tfstate.d/staging/terraform.tfstate.backup","/src/infra/terraform.tfvars.example","/src/infra/usage-estimates.yml","/src/infra/variables.tf","/src/mkdocs.yml","/src/python-safety-results.json","/src/python-semgrep-results.json","/src/python-trivy-results.json","/src/requirements.txt","/src/scripts/cost-calculator.py","/src/scripts/setup-keyvault.sh","/src/security-summary.txt"]},"time":{"rules":[],"rules_parse_time":4.224738121032715,"profiling_times":{"config_time":18.661008834838867,"core_time":18.24850106239319,"ignores_time":0.004624366760253906,"total_time":36.91792583465576},"parsing_time":{"total_time":1.9959547519683838,"per_file_time":{"mean":0.0665318250656128,"std_dev":0.002781744965599464},"very_slow_files":[]},"targets":[],"total_bytes":0,"max_memory_bytes":1112742080},"skipped_rules":[]}
{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.464", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_AZURE_165", "name": "Ensure geo-replicated container registries to match multi-region container deployments.", "shortDescription": {"text": "Ensure geo-replicated container registries to match multi-region container deployments."}, "fullDescription": {"text": "Ensure geo-replicated container registries to match multi-region container deployments."}, "help": {"text": "Ensure geo-replicated container registries to match multi-region container deployments.\nResource: azurerm_container_registry.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/azr-networking-165"}, {"id": "CKV_AZURE_233", "name": "Ensure Azure Container Registry (ACR) is zone redundant", "shortDescription": {"text": "Ensure Azure Container Registry (ACR) is zone redundant"}, "fullDescription": {"text": "Ensure Azure Container Registry (ACR) is zone redundant"}, "help": {"text": "Ensure Azure Container Registry (ACR) is zone redundant\nResource: azurerm_container_registry.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/bc-azure-233"}, {"id": "CKV_AZURE_199", "name": "Ensure that Azure Service Bus uses double encryption", "shortDescription": {"text": "Ensure that Azure Service Bus uses double encryption"}, "fullDescription": {"text": "Ensure that Azure Service Bus uses double encryption"}, "help": {"text": "Ensure that Azure Service Bus uses double encryption\nResource: azurerm_servicebus_namespace.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-199"}, {"id": "CKV_AZURE_201", "name": "Ensure that Azure Service Bus uses a customer-managed key to encrypt data", "shortDescription": {"text": "Ensure that Azure Service Bus uses a customer-managed key to encrypt data"}, "fullDescription": {"text": "Ensure that Azure Service Bus uses a customer-managed key to encrypt data"}, "help": {"text": "Ensure that Azure Service Bus uses a customer-managed key to encrypt data\nResource: azurerm_servicebus_namespace.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-201"}, {"id": "CKV_AZURE_189", "name": "Ensure that Azure Key Vault disables public network access", "shortDescription": {"text": "Ensure that Azure Key Vault disables public network access"}, "fullDescription": {"text": "Ensure that Azure Key Vault disables public network access"}, "help": {"text": "Ensure that Azure Key Vault disables public network access\nResource: azurerm_key_vault.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/azr-networking-189"}, {"id": "CKV_AZURE_109", "name": "Ensure that key vault allows firewall rules settings", "shortDescription": {"text": "Ensure that key vault allows firewall rules settings"}, "fullDescription": {"text": "Ensure that key vault allows firewall rules settings"}, "help": {"text": "Ensure that key vault allows firewall rules settings\nResource: azurerm_key_vault.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/ensure-that-key-vault-allows-firewall-rules-settings"}, {"id": "CKV_AZURE_112", "name": "Ensure that key vault key is backed by HSM", "shortDescription": {"text": "Ensure that key vault key is backed by HSM"}, "fullDescription": {"text": "Ensure that key vault key is backed by HSM"}, "help": {"text": "Ensure that key vault key is backed by HSM\nResource: azurerm_key_vault_key.servicebus"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/ensure-that-key-vault-key-is-backed-by-hsm"}, {"id": "CKV_AZURE_59", "name": "Ensure that Storage accounts disallow public access", "shortDescription": {"text": "Ensure that Storage accounts disallow public access"}, "fullDescription": {"text": "Ensure that Storage accounts disallow public access"}, "help": {"text": "Ensure that Storage accounts disallow public access\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access"}, {"id": "CKV_AZURE_33", "name": "Ensure Storage logging is enabled for Queue service for read, write and delete requests", "shortDescription": {"text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests"}, "fullDescription": {"text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests"}, "help": {"text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service"}, {"id": "CKV_AZURE_35", "name": "Ensure default network access rule for Storage Accounts is set to deny", "shortDescription": {"text": "Ensure default network access rule for Storage Accounts is set to deny"}, "fullDescription": {"text": "Ensure default network access rule for Storage Accounts is set to deny"}, "help": {"text": "Ensure default network access rule for Storage Accounts is set to deny\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/set-default-network-access-rule-for-storage-accounts-to-deny"}, {"id": "CKV_AZURE_206", "name": "Ensure that Storage Accounts use replication", "shortDescription": {"text": "Ensure that Storage Accounts use replication"}, "fullDescription": {"text": "Ensure that Storage Accounts use replication"}, "help": {"text": "Ensure that Storage Accounts use replication\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-206"}, {"id": "CKV_AZURE_247", "name": "Ensure that Azure Cognitive Services account hosted with OpenAI is configured with data loss prevention", "shortDescription": {"text": "Ensure that Azure Cognitive Services account hosted with OpenAI is configured with data loss prevention"}, "fullDescription": {"text": "Ensure that Azure Cognitive Services account hosted with OpenAI is configured with data loss prevention"}, "help": {"text": "Ensure that Azure Cognitive Services account hosted with OpenAI is configured with data loss prevention\nResource: azurerm_cognitive_account.openai"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/bc-azure-247"}, {"id": "CKV2_AZURE_40", "name": "Ensure storage account is not configured with Shared Key authorization", "shortDescription": {"text": "Ensure storage account is not configured with Shared Key authorization"}, "fullDescription": {"text": "Ensure storage account is not configured with Shared Key authorization"}, "help": {"text": "Ensure storage account is not configured with Shared Key authorization\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-iam-policies/bc-azure-2-40"}, {"id": "CKV2_AZURE_32", "name": "Ensure private endpoint is configured to key vault", "shortDescription": {"text": "Ensure private endpoint is configured to key vault"}, "fullDescription": {"text": "Ensure private endpoint is configured to key vault"}, "help": {"text": "Ensure private endpoint is configured to key vault\nResource: azurerm_key_vault.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/bc-azure-2-32"}, {"id": "CKV2_AZURE_21", "name": "Ensure Storage logging is enabled for Blob service for read requests", "shortDescription": {"text": "Ensure Storage logging is enabled for Blob service for read requests"}, "fullDescription": {"text": "Ensure Storage logging is enabled for Blob service for read requests"}, "help": {"text": "Ensure Storage logging is enabled for Blob service for read requests\nResource: azurerm_storage_container.topics"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-logging-policies/ensure-storage-logging-is-enabled-for-blob-service-for-read-requests"}, {"id": "CKV2_AZURE_38", "name": "Ensure soft-delete is enabled on Azure storage account", "shortDescription": {"text": "Ensure soft-delete is enabled on Azure storage account"}, "fullDescription": {"text": "Ensure soft-delete is enabled on Azure storage account"}, "help": {"text": "Ensure soft-delete is enabled on Azure storage account\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/bc-azure-2-38"}, {"id": "CKV2_AZURE_33", "name": "Ensure storage account is configured with private endpoint", "shortDescription": {"text": "Ensure storage account is configured with private endpoint"}, "fullDescription": {"text": "Ensure storage account is configured with private endpoint"}, "help": {"text": "Ensure storage account is configured with private endpoint\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/bc-azure-2-33"}, {"id": "CKV2_AZURE_1", "name": "Ensure storage for critical data are encrypted with Customer Managed Key", "shortDescription": {"text": "Ensure storage for critical data are encrypted with Customer Managed Key"}, "fullDescription": {"text": "Ensure storage for critical data are encrypted with Customer Managed Key"}, "help": {"text": "Ensure storage for critical data are encrypted with Customer Managed Key\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key"}, {"id": "CKV2_AZURE_22", "name": "Ensure that Cognitive Services enables customer-managed key for encryption", "shortDescription": {"text": "Ensure that Cognitive Services enables customer-managed key for encryption"}, "fullDescription": {"text": "Ensure that Cognitive Services enables customer-managed key for encryption"}, "help": {"text": "Ensure that Cognitive Services enables customer-managed key for encryption\nResource: azurerm_cognitive_account.openai"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/ensure-azure-cognitive-services-enables-customer-managed-keys-cmks-for-encryption"}, {"id": "CKV2_AZURE_41", "name": "Ensure storage account is configured with SAS expiration policy", "shortDescription": {"text": "Ensure storage account is configured with SAS expiration policy"}, "fullDescription": {"text": "Ensure storage account is configured with SAS expiration policy"}, "help": {"text": "Ensure storage account is configured with SAS expiration policy\nResource: azurerm_storage_account.main"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-iam-policies/bc-azure-2-41"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_AZURE_165", "ruleIndex": 0, "level": "warning", "attachments": [], "message": {"text": "Ensure geo-replicated container registries to match multi-region container deployments."}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/container_apps.tf"}, "region": {"startLine": 26, "endLine": 54, "snippet": {"text": "resource \"azurerm_container_registry\" \"main\" {\n  # checkov:skip=CKV_AZURE_165: Geo-replication requires Premium SKU - too expensive for development\n  # checkov:skip=CKV_AZURE_233: Zone redundancy requires Premium SKU - too expensive for development\n  name                = \"${replace(var.resource_prefix, \"-\", \"\")}acr\"\n  resource_group_name = azurerm_resource_group.main.name\n  location            = var.location\n  sku                 = \"Standard\" # Upgraded from Basic for security features\n  admin_enabled       = false      # Disable admin account for security\n\n  # Enable public network access restrictions\n  public_network_access_enabled = false\n\n  # Enable dedicated data endpoints\n  data_endpoint_enabled = true\n\n  # Zone redundancy (requires Premium SKU in production)\n  zone_redundancy_enabled = false # Would need Premium SKU\n\n  # Retention policy for untagged manifests\n  retention_policy_in_days = 7\n\n  # Trust policy for content trust\n  trust_policy_enabled = true\n\n  # Enable vulnerability scanning (requires Standard or Premium)\n  quarantine_policy_enabled = true\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Geo-replication requires Premium SKU - too expensive for development"}]}, {"ruleId": "CKV_AZURE_233", "ruleIndex": 1, "level": "warning", "attachments": [], "message": {"text": "Ensure Azure Container Registry (ACR) is zone redundant"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/container_apps.tf"}, "region": {"startLine": 26, "endLine": 54, "snippet": {"text": "resource \"azurerm_container_registry\" \"main\" {\n  # checkov:skip=CKV_AZURE_165: Geo-replication requires Premium SKU - too expensive for development\n  # checkov:skip=CKV_AZURE_233: Zone redundancy requires Premium SKU - too expensive for development\n  name                = \"${replace(var.resource_prefix, \"-\", \"\")}acr\"\n  resource_group_name = azurerm_resource_group.main.name\n  location            = var.location\n  sku                 = \"Standard\" # Upgraded from Basic for security features\n  admin_enabled       = false      # Disable admin account for security\n\n  # Enable public network access restrictions\n  public_network_access_enabled = false\n\n  # Enable dedicated data endpoints\n  data_endpoint_enabled = true\n\n  # Zone redundancy (requires Premium SKU in production)\n  zone_redundancy_enabled = false # Would need Premium SKU\n\n  # Retention policy for untagged manifests\n  retention_policy_in_days = 7\n\n  # Trust policy for content trust\n  trust_policy_enabled = true\n\n  # Enable vulnerability scanning (requires Standard or Premium)\n  quarantine_policy_enabled = true\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Zone redundancy requires Premium SKU - too expensive for development"}]}, {"ruleId": "CKV_AZURE_199", "ruleIndex": 2, "level": "warning", "attachments": [], "message": {"text": "Ensure that Azure Service Bus uses double encryption"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/container_apps.tf"}, "region": {"startLine": 128, "endLine": 152, "snippet": {"text": "resource \"azurerm_servicebus_namespace\" \"main\" {\n  # checkov:skip=CKV_AZURE_201: Customer-managed encryption requires complex setup - using Azure-managed encryption for development\n  # checkov:skip=CKV_AZURE_199: Double encryption requires complex configuration - single encryption sufficient for development\n  name                = \"${var.resource_prefix}-sb\"\n  location            = var.location\n  resource_group_name = azurerm_resource_group.main.name\n  sku                 = \"Premium\" # Upgraded for security features\n\n  # Security configurations\n  public_network_access_enabled = false\n  local_auth_enabled            = false # Disable local authentication\n  minimum_tls_version           = \"1.2\" # Use latest TLS\n\n  # Enable managed identity\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  depends_on = [\n    azurerm_key_vault_access_policy.servicebus,\n    azurerm_key_vault_key.servicebus\n  ]\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Double encryption requires complex configuration - single encryption sufficient for development"}]}, {"ruleId": "CKV_AZURE_201", "ruleIndex": 3, "level": "warning", "attachments": [], "message": {"text": "Ensure that Azure Service Bus uses a customer-managed key to encrypt data"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/container_apps.tf"}, "region": {"startLine": 128, "endLine": 152, "snippet": {"text": "resource \"azurerm_servicebus_namespace\" \"main\" {\n  # checkov:skip=CKV_AZURE_201: Customer-managed encryption requires complex setup - using Azure-managed encryption for development\n  # checkov:skip=CKV_AZURE_199: Double encryption requires complex configuration - single encryption sufficient for development\n  name                = \"${var.resource_prefix}-sb\"\n  location            = var.location\n  resource_group_name = azurerm_resource_group.main.name\n  sku                 = \"Premium\" # Upgraded for security features\n\n  # Security configurations\n  public_network_access_enabled = false\n  local_auth_enabled            = false # Disable local authentication\n  minimum_tls_version           = \"1.2\" # Use latest TLS\n\n  # Enable managed identity\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  depends_on = [\n    azurerm_key_vault_access_policy.servicebus,\n    azurerm_key_vault_key.servicebus\n  ]\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Customer-managed encryption requires complex setup - using Azure-managed encryption for development"}]}, {"ruleId": "CKV_AZURE_189", "ruleIndex": 4, "level": "warning", "attachments": [], "message": {"text": "Ensure that Azure Key Vault disables public network access"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 25, "endLine": 56, "snippet": {"text": "resource \"azurerm_key_vault\" \"main\" {\n  # checkov:skip=CKV_AZURE_189: Public access is acceptable for this use case\n  # checkov:skip=CKV_AZURE_109: Firewall rules not required for this use case\n  # checkov:skip=CKV2_AZURE_32: Private endpoint not required for this use case\n  name     = \"${local.clean_prefix}kv${random_string.suffix.result}\"\n  location = azurerm_resource_group.main.location\n\n  resource_group_name        = azurerm_resource_group.main.name\n  tenant_id                  = data.azurerm_client_config.current.tenant_id\n  sku_name                   = \"standard\"\n  purge_protection_enabled   = true\n  soft_delete_retention_days = 7\n\n  # Network ACLs for security compliance\n  network_acls {\n    default_action = \"Deny\"\n    bypass         = \"AzureServices\"\n\n    # Allow access from Azure Container Apps and Azure services\n    virtual_network_subnet_ids = []\n    ip_rules                   = []\n  }\n\n  tags = {\n    Environment = var.environment\n    Project     = \"ai-content-farm\"\n    ManagedBy   = \"terraform\"\n  }\n\n  # Enable diagnostic settings for security compliance\n  depends_on = [azurerm_log_analytics_workspace.main]\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Public access is acceptable for this use case"}]}, {"ruleId": "CKV_AZURE_109", "ruleIndex": 5, "level": "warning", "attachments": [], "message": {"text": "Ensure that key vault allows firewall rules settings"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 25, "endLine": 56, "snippet": {"text": "resource \"azurerm_key_vault\" \"main\" {\n  # checkov:skip=CKV_AZURE_189: Public access is acceptable for this use case\n  # checkov:skip=CKV_AZURE_109: Firewall rules not required for this use case\n  # checkov:skip=CKV2_AZURE_32: Private endpoint not required for this use case\n  name     = \"${local.clean_prefix}kv${random_string.suffix.result}\"\n  location = azurerm_resource_group.main.location\n\n  resource_group_name        = azurerm_resource_group.main.name\n  tenant_id                  = data.azurerm_client_config.current.tenant_id\n  sku_name                   = \"standard\"\n  purge_protection_enabled   = true\n  soft_delete_retention_days = 7\n\n  # Network ACLs for security compliance\n  network_acls {\n    default_action = \"Deny\"\n    bypass         = \"AzureServices\"\n\n    # Allow access from Azure Container Apps and Azure services\n    virtual_network_subnet_ids = []\n    ip_rules                   = []\n  }\n\n  tags = {\n    Environment = var.environment\n    Project     = \"ai-content-farm\"\n    ManagedBy   = \"terraform\"\n  }\n\n  # Enable diagnostic settings for security compliance\n  depends_on = [azurerm_log_analytics_workspace.main]\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Firewall rules not required for this use case"}]}, {"ruleId": "CKV_AZURE_112", "ruleIndex": 6, "level": "warning", "attachments": [], "message": {"text": "Ensure that key vault key is backed by HSM"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 155, "endLine": 175, "snippet": {"text": "resource \"azurerm_key_vault_key\" \"servicebus\" {\n  # checkov:skip=CKV_AZURE_112: HSM backing requires Premium Key Vault - too expensive for development\n  name            = \"servicebus-encryption-key\"\n  key_vault_id    = azurerm_key_vault.main.id\n  key_type        = \"RSA\" # Use standard RSA key (HSM requires Premium Key Vault)\n  key_size        = 2048\n  expiration_date = timeadd(timestamp(), \"8760h\") # 1 year expiration\n\n  key_opts = [\n    \"decrypt\",\n    \"encrypt\",\n    \"sign\",\n    \"unwrapKey\",\n    \"verify\",\n    \"wrapKey\",\n  ]\n\n  depends_on = [azurerm_key_vault_access_policy.current_user]\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " HSM backing requires Premium Key Vault - too expensive for development"}]}, {"ruleId": "CKV_AZURE_59", "ruleIndex": 7, "level": "warning", "attachments": [], "message": {"text": "Ensure that Storage accounts disallow public access"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Using for testing"}]}, {"ruleId": "CKV_AZURE_33", "ruleIndex": 8, "level": "warning", "attachments": [], "message": {"text": "Ensure Storage logging is enabled for Queue service for read, write and delete requests"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Not using queues"}]}, {"ruleId": "CKV_AZURE_35", "ruleIndex": 9, "level": "warning", "attachments": [], "message": {"text": "Ensure default network access rule for Storage Accounts is set to deny"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Needed for initial setup"}]}, {"ruleId": "CKV_AZURE_206", "ruleIndex": 10, "level": "warning", "attachments": [], "message": {"text": "Ensure that Storage Accounts use replication"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " LRS is sufficient for this use case"}]}, {"ruleId": "CKV_AZURE_247", "ruleIndex": 11, "level": "warning", "attachments": [], "message": {"text": "Ensure that Azure Cognitive Services account hosted with OpenAI is configured with data loss prevention"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 248, "endLine": 280, "snippet": {"text": "resource \"azurerm_cognitive_account\" \"openai\" {\n  # checkov:skip=CKV_AZURE_247: Data loss prevention requires complex configuration - using network ACLs for access control\n  # checkov:skip=CKV2_AZURE_22: Customer-managed encryption requires complex setup - using Azure-managed encryption for development\n  name                = \"${local.resource_prefix}-openai\"\n  location            = \"UK South\" # OpenAI available in UK South for European compliance\n  resource_group_name = azurerm_resource_group.main.name\n  kind                = \"OpenAI\"\n  sku_name            = \"S0\"\n\n  # Security settings\n  public_network_access_enabled = false\n  local_auth_enabled            = false # Disable local authentication for security\n\n  # Custom subdomain required for private endpoints\n  custom_subdomain_name = \"${replace(local.resource_prefix, \"-\", \"\")}openai\"\n\n  # Enable managed identity\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  # Network access restrictions\n  network_acls {\n    default_action = \"Deny\"\n\n    # Allow access from Container Apps subnet when implemented\n    # virtual_network_rules {\n    #   subnet_id = azurerm_subnet.container_apps.id\n    # }\n  }\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Data loss prevention requires complex configuration - using network ACLs for access control"}]}, {"ruleId": "CKV2_AZURE_40", "ruleIndex": 12, "level": "warning", "attachments": [], "message": {"text": "Ensure storage account is not configured with Shared Key authorization"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Shared Key authorization required for Terraform compatibility; access is restricted and secure"}]}, {"ruleId": "CKV2_AZURE_32", "ruleIndex": 13, "level": "warning", "attachments": [], "message": {"text": "Ensure private endpoint is configured to key vault"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 25, "endLine": 56, "snippet": {"text": "resource \"azurerm_key_vault\" \"main\" {\n  # checkov:skip=CKV_AZURE_189: Public access is acceptable for this use case\n  # checkov:skip=CKV_AZURE_109: Firewall rules not required for this use case\n  # checkov:skip=CKV2_AZURE_32: Private endpoint not required for this use case\n  name     = \"${local.clean_prefix}kv${random_string.suffix.result}\"\n  location = azurerm_resource_group.main.location\n\n  resource_group_name        = azurerm_resource_group.main.name\n  tenant_id                  = data.azurerm_client_config.current.tenant_id\n  sku_name                   = \"standard\"\n  purge_protection_enabled   = true\n  soft_delete_retention_days = 7\n\n  # Network ACLs for security compliance\n  network_acls {\n    default_action = \"Deny\"\n    bypass         = \"AzureServices\"\n\n    # Allow access from Azure Container Apps and Azure services\n    virtual_network_subnet_ids = []\n    ip_rules                   = []\n  }\n\n  tags = {\n    Environment = var.environment\n    Project     = \"ai-content-farm\"\n    ManagedBy   = \"terraform\"\n  }\n\n  # Enable diagnostic settings for security compliance\n  depends_on = [azurerm_log_analytics_workspace.main]\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Private endpoint not required for this use case"}]}, {"ruleId": "CKV2_AZURE_21", "ruleIndex": 14, "level": "warning", "attachments": [], "message": {"text": "Ensure Storage logging is enabled for Blob service for read requests"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 234, "endLine": 239, "snippet": {"text": "resource \"azurerm_storage_container\" \"topics\" {\n  # checkov:skip=CKV2_AZURE_21: Logging not required for this use case\n  name                  = \"content-topics\"\n  storage_account_id    = azurerm_storage_account.main.id\n  container_access_type = \"private\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Logging not required for this use case"}]}, {"ruleId": "CKV2_AZURE_38", "ruleIndex": 15, "level": "warning", "attachments": [], "message": {"text": "Ensure soft-delete is enabled on Azure storage account"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Not required for non-critical data"}]}, {"ruleId": "CKV2_AZURE_33", "ruleIndex": 16, "level": "warning", "attachments": [], "message": {"text": "Ensure storage account is configured with private endpoint"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Public endpoint is acceptable for this use case"}]}, {"ruleId": "CKV2_AZURE_1", "ruleIndex": 17, "level": "warning", "attachments": [], "message": {"text": "Ensure storage for critical data are encrypted with Customer Managed Key"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Microsoft-managed keys are sufficient"}]}, {"ruleId": "CKV2_AZURE_22", "ruleIndex": 18, "level": "warning", "attachments": [], "message": {"text": "Ensure that Cognitive Services enables customer-managed key for encryption"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 248, "endLine": 280, "snippet": {"text": "resource \"azurerm_cognitive_account\" \"openai\" {\n  # checkov:skip=CKV_AZURE_247: Data loss prevention requires complex configuration - using network ACLs for access control\n  # checkov:skip=CKV2_AZURE_22: Customer-managed encryption requires complex setup - using Azure-managed encryption for development\n  name                = \"${local.resource_prefix}-openai\"\n  location            = \"UK South\" # OpenAI available in UK South for European compliance\n  resource_group_name = azurerm_resource_group.main.name\n  kind                = \"OpenAI\"\n  sku_name            = \"S0\"\n\n  # Security settings\n  public_network_access_enabled = false\n  local_auth_enabled            = false # Disable local authentication for security\n\n  # Custom subdomain required for private endpoints\n  custom_subdomain_name = \"${replace(local.resource_prefix, \"-\", \"\")}openai\"\n\n  # Enable managed identity\n  identity {\n    type = \"SystemAssigned\"\n  }\n\n  # Network access restrictions\n  network_acls {\n    default_action = \"Deny\"\n\n    # Allow access from Container Apps subnet when implemented\n    # virtual_network_rules {\n    #   subnet_id = azurerm_subnet.container_apps.id\n    # }\n  }\n\n  tags = local.common_tags\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " Customer-managed encryption requires complex setup - using Azure-managed encryption for development"}]}, {"ruleId": "CKV2_AZURE_41", "ruleIndex": 19, "level": "warning", "attachments": [], "message": {"text": "Ensure storage account is configured with SAS expiration policy"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "tf/infra/main.tf"}, "region": {"startLine": 209, "endLine": 232, "snippet": {"text": "resource \"azurerm_storage_account\" \"main\" {\n  # checkov:skip=CKV_AZURE_33: Not using queues\n  # checkov:skip=CKV_AZURE_35: Needed for initial setup\n  # checkov:skip=CKV_AZURE_59: Using for testing\n  # checkov:skip=CKV_AZURE_206: LRS is sufficient for this use case\n  # checkov:skip=CKV2_AZURE_1: Microsoft-managed keys are sufficient\n  # checkov:skip=CKV2_AZURE_33: Public endpoint is acceptable for this use case\n  # checkov:skip=CKV2_AZURE_38: Not required for non-critical data\n  # checkov:skip=CKV2_AZURE_40: Shared Key authorization required for Terraform compatibility; access is restricted and secure\n  # checkov:skip=CKV2_AZURE_41: No SAS tokens used\n  name                          = \"${local.clean_prefix}st${random_string.suffix.result}\"\n  resource_group_name           = azurerm_resource_group.main.name\n  location                      = azurerm_resource_group.main.location\n  account_tier                  = \"Standard\"\n  account_replication_type      = \"LRS\"\n  public_network_access_enabled = true\n  shared_access_key_enabled     = true\n  network_rules {\n    default_action = \"Allow\"\n    bypass         = [\"AzureServices\"]\n  }\n  allow_nested_items_to_be_public = false\n  min_tls_version                 = \"TLS1_2\"\n}\n"}}}}], "suppressions": [{"kind": "inSource", "justification": " No SAS tokens used"}]}]}]}